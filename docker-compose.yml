# Local Docker Compose to test Keycloak
services:
  keycloak:
    container_name: keycloak
    build:
      context: ./keycloak
      dockerfile: Dockerfile
    command: ["start", "--verbose"]
    environment:
      KC_FEATURES: admin-fine-grained-authz:v2,hostname:v2,fips
      KC_FIPS_MODE: strict
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${DB_NAME}
      KC_DB_USERNAME: ${DB_USER}
      KC_DB_PASSWORD: ${DB_PASS}
      KC_HOSTNAME: https://localhost/auth
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KC_ADMIN_USER}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_ADMIN_PASS}
      KC_HTTP_ENABLED: true
      KC_PROXY_HEADER: xforwarded
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - keycloak_network
  postgres:
    container_name: kc-postgres
    image: postgres:15
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - keycloak_network
  apache:
    container_name: httpd-proxy
    build:
      context: ./httpd
      dockerfile: Dockerfile
    ports:
      - "443:443"
    networks:
      - keycloak_network

networks:
  keycloak_network:

volumes:
  postgres_data: